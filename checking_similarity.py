# -*- coding: utf-8 -*-
"""checking similarity.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18afUu-V0_YdHy9NI-eYFGp-srPGIaUDT
"""

import pandas as pd
A=pd.read_csv("E:/HappyMonk.ai/1/insurance.csv")
B=A[:200]
A=A["age"]
B=B["age"]

import numpy as np

# Load datasets A and B
#A = np.loadtxt('A.csv', delimiter=',')
#B = np.loadtxt('B.csv', delimiter=',')

# Calculate summary statistics for each dataset
mean_A = np.mean(A)
mean_B = np.mean(B)

std_A = np.std(A)
std_B = np.std(B)

corr_A = np.corrcoef(A)
corr_B = np.corrcoef(B)

# Compare summary statistics
if mean_A == mean_B and std_A == std_B and np.allclose(corr_A, corr_B):
    print('Datasets A and B identify the same variable')
else:
    print('Datasets A and B do not identify the same variable')

import numpy as np
import scipy.stats as stats
data_A=np.array(A)
data_B=np.array(B)
# Load the two datasets
#data_A = np.load('A.npy')
#data_B = np.load('B.npy')

# Calculate basic statistical properties of the two datasets
mean_A = np.mean(data_A)
mean_B = np.mean(data_B)
std_A = np.std(data_A)
std_B = np.std(data_B)

# Compare the means of the two datasets
if np.abs(mean_A - mean_B) < 0.01:
  print('The means of the two datasets are similar')
else:
  print('The means of the two datasets are not similar')

# Compare the standard deviations of the two datasets
if np.abs(std_A - std_B) < 0.01:
  print('The standard deviations of the two datasets are similar')
else:
  print('The standard deviations of the two datasets are not similar')

# Perform a t-test to determine whether the two datasets come from the same distribution
t, p = stats.ttest_ind(data_A, data_B)
if p > 0.01:
  print('The two datasets likely come from the same distribution')
else:
  print('The two datasets do not come from the same distribution')

